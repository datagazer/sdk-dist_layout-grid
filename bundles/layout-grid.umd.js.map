{"version":3,"file":"layout-grid.umd.js","sources":["ng://@datagazer/layout-grid/lib/providers/layout-presets.ts","ng://@datagazer/layout-grid/lib/classes/layout-directive.ts","ng://@datagazer/layout-grid/lib/directives/container.directive.ts","ng://@datagazer/layout-grid/lib/directives/grid-cell.directive.ts","ng://@datagazer/layout-grid/lib/directives/grid-flow.directive.ts","ng://@datagazer/layout-grid/lib/directives/grid-gap.directive.ts","ng://@datagazer/layout-grid/lib/directives/grid.directive.ts","ng://@datagazer/layout-grid/lib/directives/place.directive.ts","ng://@datagazer/layout-grid/lib/layout-grid.module.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\nimport { LayoutPreset } from '../interfaces/layout-preset';\n\nexport const LAYOUT_PRESETS = new InjectionToken<LayoutPreset[]>('LAYOUT_PRESETS', {\n  factory: () => [\n    {\n      alias: 'xs',\n      columns: 4,\n      defaultMargin: '16px',\n      defaultGutter: '16px',\n      defaultColumnSpan: 4\n    },\n\n    {\n      alias: 'sm',\n      columns: 8,\n      defaultMargin: '24px',\n      defaultGutter: '24px',\n      defaultColumnSpan: 4\n    },\n\n    {\n      alias: 'gt-sm',\n      columns: 12,\n      defaultMargin: '24px',\n      defaultGutter: '24px',\n      defaultColumnSpan: 4,\n      maxWidth: '1280px'\n    }\n  ]\n});\n","import { ElementRef, Inject, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { MediaMarshaller, MediaObserver, StyleDefinition, StyleUtils } from '@angular/flex-layout/core';\nimport { BehaviorSubject, Observable, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { LayoutPreset } from '../interfaces/layout-preset';\nimport { LAYOUT_PRESETS } from '../providers/layout-presets';\n\nexport abstract class LayoutDirective implements OnChanges, OnInit, OnDestroy {\n  protected abstract inputs: string[];\n\n  protected inputValue$: BehaviorSubject<string | undefined> = (() => {\n    let subject$ = new BehaviorSubject<string | undefined>(undefined);\n\n    this.$mediaMarshaller.init(\n      this.nativeElement,\n      this.directiveKey,\n\n      (value) => {\n        if (value !== subject$.value) {\n          subject$.next(value);\n        }\n      }\n    );\n\n    return subject$;\n  })();\n\n  protected layoutPreset$: BehaviorSubject<LayoutPreset> = (() => {\n    let subject$ = new BehaviorSubject<LayoutPreset>(this.defaultLayoutPreset);\n\n    {\n      let source$ = this.$mediaObserver.asObservable();\n\n      source$.pipe(\n        map(() => this.activeLayoutPreset || this.defaultLayoutPreset)\n      ).subscribe(subject$);\n    }\n\n    return subject$\n  })();\n\n  protected styleChange$: Observable<StyleDefinition> = (() => {\n    let source$ = combineLatest(this.inputValue$, this.layoutPreset$);\n\n    return source$.pipe(\n      map(([inputValue]) => this.buildStyle(inputValue))\n    );\n  })();\n\n  protected get activeLayoutPreset(): LayoutPreset | undefined {\n    return this.$layoutPresets.find(({ alias }) => this.$mediaObserver.isActive(alias));\n  }\n\n  protected get defaultLayoutPreset(): LayoutPreset {\n    return this.$layoutPresets[0];\n  }\n\n  protected get nativeElement(): HTMLElement {\n    return this.$elementRef.nativeElement;\n  }\n\n  protected get directiveKey(): string {\n    return this.constructor.name;\n  }\n\n  public constructor(\n    protected readonly $elementRef: ElementRef<HTMLElement>,\n    protected readonly $mediaMarshaller: MediaMarshaller,\n    protected readonly $mediaObserver: MediaObserver,\n    protected readonly $styleUtils: StyleUtils,\n\n    @Inject(LAYOUT_PRESETS)\n    protected readonly $layoutPresets: LayoutPreset[]\n  ) {}\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    Object.entries(changes).forEach(([input, { currentValue }]) => {\n      if (this.inputs.includes(input)) {\n        this.$mediaMarshaller.setValue(\n          this.nativeElement,\n          this.directiveKey,\n          currentValue,\n          this.extractSuffix(input)\n        );\n      }\n    });\n  }\n\n  public ngOnInit(): void {\n    this.styleChange$.subscribe((style) => {\n      this.$styleUtils.applyStyleToElement(this.nativeElement, style);\n    });\n  }\n\n  public ngOnDestroy(): void {\n    this.$mediaMarshaller.releaseElement(this.nativeElement);\n  }\n\n  protected abstract buildStyle(inputValue?: string): StyleDefinition;\n\n  private extractSuffix(input: string): string {\n    let result = /\\.(xs|sm|md|lg|xl|lt-sm|lt-md|lt-lg|lt-xl|gt-xs|gt-sm|gt-md|gt-lg)$/.exec(input);\n\n    if (result) {\n      return result[1];\n    }\n\n    return '';\n  }\n}\n","import { Directive } from '@angular/core';\nimport { StyleDefinition } from '@angular/flex-layout/core';\nimport { LayoutDirective } from '../classes/layout-directive';\n\nconst selector: string = `\n  [dgContainer]\n`;\n\nconst inputs: string[] = [\n  // No inputs\n];\n\n@Directive({\n  selector,\n  inputs\n})\nexport class ContainerDirective extends LayoutDirective {\n  public inputs: string[] = inputs;\n\n  public buildStyle(): StyleDefinition {\n    let { maxWidth, defaultMargin } = this.layoutPreset$.value;\n\n    return {\n      'box-sizing': 'border-box',\n      'max-width': maxWidth || null,\n      'margin': maxWidth ? '0 auto' : null,\n      'padding': defaultMargin\n    };\n  }\n}\n","import { Directive } from '@angular/core';\nimport { StyleDefinition } from '@angular/flex-layout/core';\nimport { LayoutDirective } from '../classes/layout-directive';\n\nconst selector: string = `\n  [dgGridCell],\n  [dgGridCell.xs], [dgGridCell.sm], [dgGridCell.md], [dgGridCell.lg], [dgGridCell.xl],\n  [dgGridCell.lt-sm], [dgGridCell.lt-md], [dgGridCell.lt-lg], [dgGridCell.lt-xl],\n  [dgGridCell.gt-xs], [dgGridCell.gt-sm], [dgGridCell.gt-md], [dgGridCell.gt-lg]\n`;\n\nconst inputs: string[] = [\n  'dgGridCell',\n  'dgGridCell.xs', 'dgGridCell.sm', 'dgGridCell.md', 'dgGridCell.lg', 'dgGridCell.xl',\n  'dgGridCell.lt-sm', 'dgGridCell.lt-md', 'dgGridCell.lt-lg', 'dgGridCell.lt-xl',\n  'dgGridCell.gt-xs', 'dgGridCell.gt-sm', 'dgGridCell.gt-md', 'dgGridCell.gt-lg'\n];\n\n@Directive({\n  selector,\n  inputs\n})\nexport class GridCellDirective extends LayoutDirective {\n  public inputs: string[] = inputs;\n\n  public buildStyle(inputValue?: string): StyleDefinition {\n    let { defaultColumnSpan } = this.layoutPreset$.value;\n\n    return {\n      'display': 'grid',\n      'grid-column-end': `span ${inputValue || defaultColumnSpan}`\n    };\n  }\n}\n","import { Directive } from '@angular/core';\nimport { StyleDefinition } from '@angular/flex-layout/core';\nimport { LayoutDirective } from '../classes/layout-directive';\n\nconst selector: string = `\n  [dgGridFlow],\n  [dgGridFlow.xs], [dgGridFlow.sm], [dgGridFlow.md], [dgGridFlow.lg], [dgGridFlow.xl],\n  [dgGridFlow.lt-sm], [dgGridFlow.lt-md], [dgGridFlow.lt-lg], [dgGridFlow.lt-xl],\n  [dgGridFlow.gt-xs], [dgGridFlow.gt-sm], [dgGridFlow.gt-md], [dgGridFlow.gt-lg]\n`;\n\nconst inputs: string[] = [\n  'dgGridFlow',\n  'dgGridFlow.xs', 'dgGridFlow.sm', 'dgGridFlow.md', 'dgGridFlow.lg', 'dgGridFlow.xl',\n  'dgGridFlow.lt-sm', 'dgGridFlow.lt-md', 'dgGridFlow.lt-lg', 'dgGridFlow.lt-xl',\n  'dgGridFlow.gt-xs', 'dgGridFlow.gt-sm', 'dgGridFlow.gt-md', 'dgGridFlow.gt-lg'\n];\n\n@Directive({\n  selector,\n  inputs\n})\nexport class GridFlowDirective extends LayoutDirective {\n  public inputs: string[] = inputs;\n\n  public buildStyle(inputValue?: string): StyleDefinition {\n    return {\n      'display': 'grid',\n      'grid-auto-flow': inputValue || 'row'\n    };\n  }\n}\n","import { Directive } from '@angular/core';\nimport { StyleDefinition } from '@angular/flex-layout/core';\nimport { LayoutDirective } from '../classes/layout-directive';\n\nconst selector: string = `\n  [dgGridGap],\n  [dgGridGap.xs], [dgGridGap.sm], [dgGridGap.md], [dgGridGap.lg], [dgGridGap.xl],\n  [dgGridGap.lt-sm], [dgGridGap.lt-md], [dgGridGap.lt-lg], [dgGridGap.lt-xl],\n  [dgGridGap.gt-xs], [dgGridGap.gt-sm], [dgGridGap.gt-md], [dgGridGap.gt-lg]\n`;\n\nconst inputs: string[] = [\n  'dgGridGap',\n  'dgGridGap.xs', 'dgGridGap.sm', 'dgGridGap.md', 'dgGridGap.lg', 'dgGridGap.xl',\n  'dgGridGap.lt-sm', 'dgGridGap.lt-md', 'dgGridGap.lt-lg', 'dgGridGap.lt-xl',\n  'dgGridGap.gt-xs', 'dgGridGap.gt-sm', 'dgGridGap.gt-md', 'dgGridGap.gt-lg'\n];\n\n@Directive({\n  selector,\n  inputs\n})\nexport class GridGapDirective extends LayoutDirective {\n  public inputs: string[] = inputs;\n\n  public buildStyle(inputValue?: string): StyleDefinition {\n    let { defaultGutter } = this.layoutPreset$.value;\n\n    return {\n      'display': 'grid',\n      'grid-gap': inputValue || defaultGutter\n    };\n  }\n}\n","import { Directive } from '@angular/core';\nimport { StyleDefinition } from '@angular/flex-layout/core';\nimport { LayoutDirective } from '../classes/layout-directive';\n\nconst selector: string = `\n  [dgGrid]\n`;\n\nconst inputs: string[] = [\n  // No inputs\n];\n\n@Directive({\n  selector,\n  inputs\n})\nexport class GridDirective extends LayoutDirective {\n  public inputs: string[] = inputs;\n\n  public buildStyle(): StyleDefinition {\n    let { columns } = this.layoutPreset$.value;\n\n    return {\n      'display': 'grid',\n      'grid-template-columns': `repeat(${columns}, 1fr)`\n    };\n  }\n}\n","import { Directive } from '@angular/core';\nimport { StyleDefinition } from '@angular/flex-layout/core';\nimport { LayoutDirective } from '../classes/layout-directive';\n\nconst selector: string = `\n  [dgPlace],\n  [dgPlace.xs], [dgPlace.sm], [dgPlace.md], [dgPlace.lg], [dgPlace.xl],\n  [dgPlace.lt-sm], [dgPlace.lt-md], [dgPlace.lt-lg], [dgPlace.lt-xl],\n  [dgPlace.gt-xs], [dgPlace.gt-sm], [dgPlace.gt-md], [dgPlace.gt-lg]\n`;\n\nconst inputs: string[] = [\n  'dgPlace',\n  'dgPlace.xs', 'dgPlace.sm', 'dgPlace.md', 'dgPlace.lg', 'dgPlace.xl',\n  'dgPlace.lt-sm', 'dgPlace.lt-md', 'dgPlace.lt-lg', 'dgPlace.lt-xl',\n  'dgPlace.gt-xs', 'dgPlace.gt-sm', 'dgPlace.gt-md', 'dgPlace.gt-lg'\n];\n\n@Directive({\n  selector,\n  inputs\n})\nexport class PlaceDirective extends LayoutDirective {\n  public inputs: string[] = inputs;\n\n  public buildStyle(inputValue?: string): StyleDefinition {\n    return {\n      'place-self': inputValue || 'auto'\n    };\n  }\n}\n","import { NgModule, Type } from '@angular/core';\n\n// Modules\nimport { CoreModule } from '@angular/flex-layout/core';\n\nconst modules: Type<object>[] = [\n  CoreModule\n];\n\n// Directives\nimport { ContainerDirective } from './directives/container.directive';\nimport { GridCellDirective } from './directives/grid-cell.directive';\nimport { GridFlowDirective } from './directives/grid-flow.directive';\nimport { GridGapDirective } from './directives/grid-gap.directive';\nimport { GridDirective } from './directives/grid.directive';\nimport { PlaceDirective } from './directives/place.directive';\n\nconst directives: Type<object>[] = [\n  ContainerDirective,\n  GridCellDirective,\n  GridFlowDirective,\n  GridGapDirective,\n  GridDirective,\n  PlaceDirective\n];\n\n@NgModule({\n  imports: [\n    ...modules\n  ],\n\n  exports: [\n    ...directives\n  ],\n\n  declarations: [\n    ...directives\n  ]\n})\nexport class LayoutGridModule {}\n"],"names":["InjectionToken","BehaviorSubject","map","combineLatest","Inject","ElementRef","MediaMarshaller","MediaObserver","StyleUtils","Directive","selector","inputs","__extends","CoreModule","NgModule"],"mappings":"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"}